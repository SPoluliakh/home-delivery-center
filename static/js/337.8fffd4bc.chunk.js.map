{"version":3,"file":"static/js/337.8fffd4bc.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/nanoid/index.browser.js","Redux/selectors/selectors.ts","Components/StatusForm/StatusForm.tsx","Components/TtnInfo/TtnInfo.tsx","hooks/useDetermineTTN.ts","Components/TtnsHistory/TtnsHistory.tsx","Components/Loader/Loader.styled.ts","Components/Loader/Loader.tsx","Pages/DepartureStatusPage/DepartureStatusPage.tsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { ttnListSlice } from '../ttnListReducer/ttnListReducer';\nimport { RootState } from '../store';\nimport { ttnHistoryApi } from '../ttnHistoryApiOperations/ttnHistoryOperations';\n\nexport const ttnListSelector = (state: RootState) =>\n  state[ttnListSlice.name].ttn;\n\nexport const numberTtn = (store: RootState) => store[ttnHistoryApi.reducerPath];\n","import { ChangeEvent, FormEvent } from 'react';\n\ninterface IProps {\n  onSubmit: (evt: FormEvent<HTMLFormElement>) => void;\n  inputValue: string;\n  onChange: (evt: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const StatusForm = ({ onSubmit, inputValue, onChange }: IProps) => {\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <label>\n          TTN number\n          <input\n            type=\"text\"\n            placeholder=\"59000509805747\"\n            value={inputValue}\n            onChange={onChange}\n          />\n        </label>\n        <button type=\"submit\">Get status TTN</button>\n      </form>\n    </>\n  );\n};\n","import { memo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { useDetermineTTN } from '../../hooks/useDetermineTTN';\n\nexport const TtnInfo = memo(() => {\n  const [serchParams] = useSearchParams();\n  const ttnNumber = serchParams.get('ttnNumber') ?? '';\n\n  const { data } = useDetermineTTN(ttnNumber);\n\n  console.log('TtnInfo');\n  return (\n    <>\n      {data ? (\n        <>\n          <p>–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {Array.isArray(data) && data[0].Status}</p>\n          <p>–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {Array.isArray(data) && data[0].WarehouseSender}</p>\n          <p>\n            –û—Ç—Ä–∏–º–∞–Ω–æ: {Array.isArray(data) && data[0].WarehouseRecipient}:\n            {Array.isArray(data) && data[0].WarehouseRecipientAddress}\n          </p>\n        </>\n      ) : (\n        <p> –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó, –∞–±–æ –≤–∏–±–µ—Ä—ñ—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É</p>\n      )}\n    </>\n  );\n});\n","import { useSelector } from 'react-redux';\nimport { ITtnInfo } from '../helpers/interfaces/historyApi';\nimport { numberTtn } from '../Redux/selectors/selectors';\n\nexport const useDetermineTTN = (ttn: string) => {\n  const dat = useSelector(numberTtn);\n  const data: ITtnInfo[] | unknown = dat.queries[`getHistory(\"${ttn}\")`]?.data;\n\n  return { data };\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { ttnListSelector } from '../../Redux/selectors/selectors';\nimport { useLazyGetHistoryQuery } from '../../Redux/ttnHistoryApiOperations/ttnHistoryOperations';\n\ninterface IProps {\n  onhandleClick: (data: string) => void;\n}\n\nexport const TtnsHistory = ({ onhandleClick }: IProps) => {\n  const list = useSelector(ttnListSelector);\n  const [getTtnHistori] = useLazyGetHistoryQuery();\n  const [, setSearchParams] = useSearchParams();\n\n  const handlClick = (id: string) => {\n    const ttn = list.find(item => item.id === id);\n    if (!ttn) return;\n    onhandleClick(ttn.ttnNumber);\n    getTtnHistori(ttn.ttnNumber);\n    setSearchParams({ ttnNumber: ttn.ttnNumber });\n  };\n  console.log('TtnsHistory-------');\n  return (\n    <ul>\n      {list.map(({ ttnNumber, id }) => (\n        <li key={id} onClick={() => handlClick(id)}>\n          {ttnNumber}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nexport const Heart = styled.span`\n  display: inline-block;\n  animation: myAnim 1s ease 0.5s infinite normal forwards;\n  font-size: 50px;\n\n  @keyframes myAnim {\n    0% {\n      transform: scale(0.5);\n    }\n    50% {\n      transform: scale(1);\n    }\n    100% {\n      transform: scale(0.5);\n    }\n  }\n`;\n\nexport const HeartTwo = styled.span`\n  display: inline-block;\n  animation: myAnim 1s ease 0s infinite normal forwards;\n  font-size: 50px;\n\n  @keyframes myAnim {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(0.5);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n`;\n","import * as SC from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <SC.HeartWrap>\n      <SC.Heart>üíõ</SC.Heart>\n      <SC.HeartTwo>üíô</SC.HeartTwo>\n    </SC.HeartWrap>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { nanoid } from 'nanoid';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLazyGetHistoryQuery } from '../../Redux/ttnHistoryApiOperations/ttnHistoryOperations';\nimport { addTtn } from '../../Redux/ttnListReducer/ttnListReducer';\nimport { ttnListSelector } from '../../Redux/selectors/selectors';\nimport { StatusForm } from '../../Components/StatusForm/StatusForm';\nimport { TtnInfo } from '../../Components/TtnInfo/TtnInfo';\nimport { TtnsHistory } from '../../Components/TtnsHistory/TtnsHistory';\nimport { Loader } from '../../Components/Loader/Loader';\n\nexport const DepartureStatusPage = () => {\n  const [ttnNumber, setTtnNumber] = useState<string>('');\n  const [getTtnHistori, { isLoading }] = useLazyGetHistoryQuery();\n  const [, setSearchParams] = useSearchParams();\n\n  const dispatch = useDispatch();\n  const listOfTtn = useSelector(ttnListSelector);\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    const regex = /^([0-9]{14})$/;\n    if (!regex.test(ttnNumber)) {\n      toast.warn(`–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó`);\n      return;\n    }\n\n    getTtnHistori(ttnNumber);\n    setSearchParams({ ttnNumber: ttnNumber });\n\n    const list = listOfTtn.some(item => item.ttnNumber === ttnNumber);\n    if (list) {\n      return;\n    }\n\n    const payload = {\n      id: nanoid(),\n      ttnNumber,\n    };\n    dispatch(addTtn(payload));\n  };\n\n  const handleInputChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget;\n    setTtnNumber(value.trim());\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <StatusForm\n        onSubmit={handleSubmit}\n        inputValue={ttnNumber}\n        onChange={handleInputChange}\n      />\n      <TtnInfo />\n      <TtnsHistory onhandleClick={setTtnNumber} />\n    </>\n  );\n};\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ttnListSelector","state","ttnListSlice","ttn","numberTtn","store","ttnHistoryApi","StatusForm","onSubmit","inputValue","onChange","type","placeholder","TtnInfo","memo","useSearchParams","data","useSelector","queries","useDetermineTTN","get","console","log","Array","isArray","Status","WarehouseSender","WarehouseRecipient","WarehouseRecipientAddress","TtnsHistory","onhandleClick","list","useLazyGetHistoryQuery","getTtnHistori","setSearchParams","map","ttnNumber","onClick","find","item","handlClick","HeartWrap","styled","Heart","HeartTwo","Loader","DepartureStatusPage","useState","setTtnNumber","isLoading","dispatch","useDispatch","listOfTtn","handleSubmit","fn","evt","preventDefault","test","toast","some","payload","addTtn","self","this","args","arguments","apply","err","undefined","currentTarget","trim"],"sourceRoot":""}