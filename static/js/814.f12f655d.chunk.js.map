{"version":3,"file":"static/js/814.f12f655d.chunk.js","mappings":"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","sources":["Components/Loader/Loader.styled.ts","Components/Loader/Loader.tsx","../node_modules/nanoid/index.browser.js","Redux/selectors/selectors.ts","Components/StatusForm/StatusForm.tsx","Components/TtnInfo/TtnInfo.tsx","hooks/useDetermineTTN.ts","Components/TtnsHistory/TtnsHistory.tsx","Pages/DepartureStatusPage/DepartureStatusPage.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HeartWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nexport const Heart = styled.span`\n  display: inline-block;\n  animation: myAnim 1s ease 0.5s infinite normal forwards;\n  font-size: 50px;\n\n  @keyframes myAnim {\n    0% {\n      transform: scale(0.5);\n    }\n    50% {\n      transform: scale(1);\n    }\n    100% {\n      transform: scale(0.5);\n    }\n  }\n`;\n\nexport const HeartTwo = styled.span`\n  display: inline-block;\n  animation: myAnim 1s ease 0s infinite normal forwards;\n  font-size: 50px;\n\n  @keyframes myAnim {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(0.5);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n`;\n","import * as SC from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <SC.HeartWrap>\n      <SC.Heart>üíõ</SC.Heart>\n      <SC.HeartTwo>üíô</SC.HeartTwo>\n    </SC.HeartWrap>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { ttnListSlice } from '../ttnListReducer/ttnListReducer';\nimport { RootState } from '../store';\nimport { ttnStatusApi } from '../ttnStatusApiOperations/ttnStatusOperations';\n\nexport const ttnListSelector = (state: RootState) =>\n  state[ttnListSlice.name].ttn;\n\nexport const numberTtn = (store: RootState) => store[ttnStatusApi.reducerPath];\n","import { ChangeEvent, FormEvent } from 'react';\n\ninterface IProps {\n  onSubmit: (evt: FormEvent<HTMLFormElement>) => void;\n  inputValue: string;\n  onChange: (evt: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const StatusForm = ({ onSubmit, inputValue, onChange }: IProps) => {\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <label>\n          TTN number\n          <input\n            type=\"text\"\n            placeholder=\"59000509805747\"\n            value={inputValue}\n            onChange={onChange}\n          />\n        </label>\n        <button type=\"submit\">Get status TTN</button>\n      </form>\n    </>\n  );\n};\n","import { memo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { useDetermineTTN } from '../../hooks/useDetermineTTN';\n\nexport const TtnInfo = memo(() => {\n  const [serchParams] = useSearchParams();\n  const ttnNumber = serchParams.get('ttnNumber') ?? '';\n\n  const { data } = useDetermineTTN(ttnNumber);\n\n  return (\n    <>\n      {data ? (\n        <>\n          <p>–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {Array.isArray(data) && data[0].Status}</p>\n          <p>–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {Array.isArray(data) && data[0].WarehouseSender}</p>\n          <p>\n            –û—Ç—Ä–∏–º–∞–Ω–æ: {Array.isArray(data) && data[0].WarehouseRecipient}:\n            {Array.isArray(data) && data[0].WarehouseRecipientAddress}\n          </p>\n        </>\n      ) : (\n        <p> –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó, –∞–±–æ –≤–∏–±–µ—Ä—ñ—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É</p>\n      )}\n    </>\n  );\n});\n","import { useSelector } from 'react-redux';\nimport { ITtnInfo } from '../helpers/interfaces/historyApi';\nimport { numberTtn } from '../Redux/selectors/selectors';\n\nexport const useDetermineTTN = (ttn: string) => {\n  const dat = useSelector(numberTtn);\n  const data: ITtnInfo[] | unknown = dat.queries[`getHistory(\"${ttn}\")`]?.data;\n\n  return { data };\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { ttnListSelector } from '../../Redux/selectors/selectors';\nimport { useLazyGetHistoryQuery } from '../../Redux/ttnStatusApiOperations/ttnStatusOperations';\n\ninterface IProps {\n  onhandleClick: (data: string) => void;\n}\n\nexport const TtnsHistory = ({ onhandleClick }: IProps) => {\n  const list = useSelector(ttnListSelector);\n  const [getTtnHistori] = useLazyGetHistoryQuery();\n  const [, setSearchParams] = useSearchParams();\n\n  const handlClick = (id: string) => {\n    const ttn = list.find(item => item.id === id);\n    if (!ttn) return;\n    onhandleClick(ttn.ttnNumber);\n    getTtnHistori(ttn.ttnNumber);\n    setSearchParams({ ttnNumber: ttn.ttnNumber });\n  };\n  return (\n    <ul>\n      {list.map(({ ttnNumber, id }) => (\n        <li key={id} onClick={() => handlClick(id)}>\n          {ttnNumber}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { nanoid } from 'nanoid';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLazyGetHistoryQuery } from '../../Redux/ttnStatusApiOperations/ttnStatusOperations';\nimport { addTtn } from '../../Redux/ttnListReducer/ttnListReducer';\nimport { ttnListSelector } from '../../Redux/selectors/selectors';\nimport { StatusForm } from '../../Components/StatusForm/StatusForm';\nimport { TtnInfo } from '../../Components/TtnInfo/TtnInfo';\nimport { TtnsHistory } from '../../Components/TtnsHistory/TtnsHistory';\nimport { Loader } from '../../Components/Loader/Loader';\n\nexport const DepartureStatusPage = () => {\n  const [ttnNumber, setTtnNumber] = useState<string>('');\n  const [getTtnHistori, { isLoading }] = useLazyGetHistoryQuery();\n  const [, setSearchParams] = useSearchParams();\n\n  const dispatch = useDispatch();\n  const listOfTtn = useSelector(ttnListSelector);\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    const regex = /^([0-9]{14})$/;\n    if (!regex.test(ttnNumber)) {\n      toast.warn(`–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó`);\n      return;\n    }\n\n    getTtnHistori(ttnNumber);\n    setSearchParams({ ttnNumber: ttnNumber });\n\n    const list = listOfTtn.some(item => item.ttnNumber === ttnNumber);\n    if (list) {\n      return;\n    }\n\n    const payload = {\n      id: nanoid(),\n      ttnNumber,\n    };\n    dispatch(addTtn(payload));\n  };\n\n  const handleInputChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget;\n    setTtnNumber(value.trim());\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <StatusForm\n        onSubmit={handleSubmit}\n        inputValue={ttnNumber}\n        onChange={handleInputChange}\n      />\n      <TtnInfo />\n      <TtnsHistory onhandleClick={setTtnNumber} />\n    </>\n  );\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["HeartWrap","styled","Heart","HeartTwo","Loader","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ttnListSelector","state","ttnListSlice","ttn","numberTtn","store","ttnStatusApi","StatusForm","onSubmit","inputValue","onChange","type","placeholder","value","TtnInfo","memo","useSearchParams","data","useSelector","queries","useDetermineTTN","get","Array","isArray","Status","WarehouseSender","WarehouseRecipient","WarehouseRecipientAddress","TtnsHistory","onhandleClick","list","useLazyGetHistoryQuery","getTtnHistori","setSearchParams","map","ttnNumber","onClick","find","item","handlClick","DepartureStatusPage","useState","setTtnNumber","isLoading","dispatch","useDispatch","listOfTtn","handleSubmit","evt","preventDefault","test","toast","some","payload","addTtn","currentTarget","trim","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}